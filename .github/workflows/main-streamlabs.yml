name: 'CI Multiplatform Build'

on:
  push:
    paths-ignore:
      - '**.md'
    branches: [ "streamlabs" ]
    tags:
      - '*'

env:
  InstallPath: "packed_build"
  BUILD_DIRECTORY: "build"
  RELEASE_BUCKET: "obsstudios3.streamlabs.com"
  PACKAGE_NAME: "libobs"

jobs:
  macos64:
    name: 'macOS'
    runs-on: [macos-12]
    strategy:
      matrix:
        # arch: ['x86_64', 'arm64']
        arch: ['arm64']
        # ReleaseName: [release, debug]
        ReleaseName: [debug]
        include:
        - ReleaseName: release
          BUILD_CONFIG: RelWithDebInfo
        - ReleaseName: debug
          BUILD_CONFIG: Debug
    env:
      OS_TAG: "osx"
      MACOSX_DEPLOYMENT_TARGET_X86_64: '10.15'
      MACOSX_DEPLOYMENT_TARGET_ARM64: '11.0'
      CEF_BUILD_VERSION_MAC: '5060'
      DEPS_VERSION_MAC: '2022-08-02-b230301'
      QT_DEPS_VERSION_MAC: '2022-08-02'
      VLC_VERSION_MAC: '3.0.8'
      QT_VERSION_MAC: '6.3.1'
      SPARKLE_VERSION: '1.26.0'
      WEBRTC_VERSION_MAC: 'm94-b230130'
      LIBMEDIASOUPCLIENT_VERSION_MAC: '55d724f-b230130'

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Get the version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
        shell: bash
      - name: 'Setup build environment'
        id: setup
        run: |
          REMOVE_FORMULAS=""
          for FORMULA in ${{ env.BLOCKED_FORMULAS }}; do
            if [ -d "/usr/local/opt/${FORMULA}" ]; then
              REMOVE_FORMULAS="${REMOVE_FORMULAS}${FORMULA} "
            fi
          done

          if [ -n "${REMOVE_FORMULAS}" ]; then
            brew uninstall ${REMOVE_FORMULAS}
          fi

          echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
      - name: 'Switch to Xcode 14.1'
        run: sudo xcode-select -switch /Applications/Xcode_14.1.app
      - name: Configure / Build 
        run: ./slobs_CI/build-script-osx.sh
        env:
          ReleaseName: ${{matrix.ReleaseName}}
          BuildConfig: ${{matrix.BuildConfig}}
          CefBuildConfig: ${{matrix.CefBuildConfig}}
          ARCH: ${{matrix.arch}}
      - name: Tar artifact for deployment
        if: startsWith(github.ref, 'refs/tags/')
        run: cd ${{env.InstallPath}} && 7z a -r ../${{env.TARGET_ARTIFACT}}.7z *
        env:
          TARGET_ARTIFACT: ${{env.PACKAGE_NAME}}-${{env.OS_TAG}}-${{matrix.ReleaseName}}-${{ steps.get_version.outputs.VERSION }}-${{ matrix.arch }}
      - name: 创建发布
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
        with:
          tag_name: ${{env.TAG_NAME}}
          release_name: Release ${{env.TAG_NAME}}
          draft: false
          prerelease: false
      - name: 上传发布的资源
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.RELEASE_TOKEN}}
          TARGET_ARTIFACT: ${{env.PACKAGE_NAME}}-${{env.OS_TAG}}-${{matrix.ReleaseName}}-${{ steps.get_version.outputs.VERSION }}-${{ matrix.arch }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{env.InstallPath}}/${{env.TARGET_ARTIFACT}}.7z
          asset_name: ${{env.TARGET_ARTIFACT}}.7z
          content_type: application/zip
      
      # - name: Configure AWS credentials
      #   if: startsWith(github.ref, 'refs/tags/')
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{secrets.AWS_RELEASE_ACCESS_KEY_ID}}
      #     aws-secret-access-key: ${{secrets.AWS_RELEASE_SECRET_ACCESS_KEY}}
      #     aws-region: us-west-2
      # - name: Deploy
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: aws s3 cp ${{env.TARGET_ARTIFACT}}.7z s3://${{env.RELEASE_BUCKET}} --acl public-read
      #   env:
      #     TARGET_ARTIFACT: ${{env.PACKAGE_NAME}}-${{env.OS_TAG}}-${{matrix.ReleaseName}}-${{ steps.get_version.outputs.VERSION }}-${{ matrix.arch }}
      # - name: 'Upload debug files to Sentry'
      #   if: startsWith(github.ref, 'refs/tags/')
      #   run: 'python ./slobs_CI/sentry-osx.py'
      #   env:
      #      SENTRY_AUTH_TOKEN: ${{secrets.SENTRY_AUTH_TOKEN}}
      #      BUILDCONFIG: ${{matrix.BuildConfig}}
